// <auto-generated />
using System;
using DoAnMonHocBE.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAnMonHocBE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250221040717_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoAnMonHocBE.Entities.Comic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComicAuthor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComicContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComicTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComicTypeId");

                    b.ToTable("comics");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.ComicType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComicTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("comictypes");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComicId")
                        .HasColumnType("int");

                    b.Property<string>("CommentTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComicId");

                    b.HasIndex("UserId");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.ConfirmEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expiredtime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Starttime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("confirmemails");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComicId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastRead")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComicId");

                    b.HasIndex("UserId");

                    b.ToTable("histories");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.Hobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComicId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComicId");

                    b.HasIndex("UserId");

                    b.ToTable("hobbies");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Rolename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Urlavartar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.Comic", b =>
                {
                    b.HasOne("DoAnMonHocBE.Entities.ComicType", "ComicType")
                        .WithMany("Comics")
                        .HasForeignKey("ComicTypeId");

                    b.Navigation("ComicType");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.Comment", b =>
                {
                    b.HasOne("DoAnMonHocBE.Entities.Comic", "Comic")
                        .WithMany("Comments")
                        .HasForeignKey("ComicId");

                    b.HasOne("DoAnMonHocBE.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId");

                    b.Navigation("Comic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.ConfirmEmail", b =>
                {
                    b.HasOne("DoAnMonHocBE.Entities.User", "User")
                        .WithMany("ConfirmEmails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.History", b =>
                {
                    b.HasOne("DoAnMonHocBE.Entities.Comic", "Comic")
                        .WithMany("Historys")
                        .HasForeignKey("ComicId");

                    b.HasOne("DoAnMonHocBE.Entities.User", "User")
                        .WithMany("Historys")
                        .HasForeignKey("UserId");

                    b.Navigation("Comic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.Hobby", b =>
                {
                    b.HasOne("DoAnMonHocBE.Entities.Comic", "Comic")
                        .WithMany("Hobbys")
                        .HasForeignKey("ComicId");

                    b.HasOne("DoAnMonHocBE.Entities.User", "User")
                        .WithMany("Hobbys")
                        .HasForeignKey("UserId");

                    b.Navigation("Comic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.User", b =>
                {
                    b.HasOne("DoAnMonHocBE.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.Comic", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Historys");

                    b.Navigation("Hobbys");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.ComicType", b =>
                {
                    b.Navigation("Comics");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DoAnMonHocBE.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("ConfirmEmails");

                    b.Navigation("Historys");

                    b.Navigation("Hobbys");
                });
#pragma warning restore 612, 618
        }
    }
}
